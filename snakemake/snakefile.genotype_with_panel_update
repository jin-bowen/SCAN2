# vim: syntax=python
configfile: "scan.yaml"

samples = config['sc_bams'].keys()

rule all: 
    input: 
        expand("call_mutations/{sample}/scan2_object_update.rda", sample=samples)       

rule update_table:
    input:
        inttab="call_mutations/integrated_table.tab.gz",
        panel=config["panel"],
    output:
        outtab="call_mutations/integrated_table_update.tab",
        outtabgz="call_mutations/integrated_table_update.tab.gz",
        outtabidx="call_mutations/integrated_table_update.tab.gz.tbi",
    log:
        "call_mutations/integrate_tables_update.log"
    params:
        genome=config['genome'],
    threads: 10
    resources:
        mem_mb=lambda wildcards, input, threads: 2000*threads+5000
    benchmark:
        "call_mutations/benchmark_integrate_tables_update.txt"
    shell:
        """
        {config[scripts]}/panel_filter_sig.R {input.inttab} {output.outtab} \
		{input.panel} {params.genome} {threads} >& {log}
        """


rule pregenotype:
    input:
        config='scan.yaml',
        inttab="call_mutations/integrated_table_update.tab.gz",
        inttabidx="call_mutations/integrated_table_update.tab.gz.tbi",
        sccigars="call_mutations/{sample}/cigars.tab.gz",
        sccigarsidx="call_mutations/{sample}/cigars.tab.gz.tbi",
        bulkcigars="call_mutations/%s/cigars.tab.gz" % config['bulk_sample']
    output:
        cigardata=temp("call_mutations/{sample}/cigardata_update.tab"),
        cigardatagz="call_mutations/{sample}/cigardata_update.tab.gz",
        cigardataidx="call_mutations/{sample}/cigardata_update.tab.gz.tbi",
    log:
        "call_mutations/{sample}/pregenotype_update.log"
    benchmark:
        "call_mutations/{sample}/benchmark_pregenotyping_update.txt"
    params:
        sc_sample="{sample}"
    threads: 1
    resources:
        mem_mb=12000
    shell:
        """
        {config[scripts]}/pregenotyping.R \
            {input.config} \
            {params.sc_sample} {input.inttab} \
            {input.sccigars} {input.bulkcigars} \
            {output.cigardata} >& {log}
        """


rule genotype:
    input:
        config_yaml='scan.yaml',
        inttab="call_mutations/integrated_table_update.tab.gz",
        inttabidx="call_mutations/integrated_table_update.tab.gz.tbi",
        # depending on the AB fit method: ab_model/ or ab_model_gradient/ or ab_model_use_fit/
        fits=lambda wildcards: "ab_model" + ("_use_fit" if wildcards.sample in config['abmodel_use_fit'].keys() else ("" if config['abmodel_method'] == "grid_search" else "_gradient")) + "/{sample}/fits.rda",
        sccigars="call_mutations/{sample}/cigars.tab.gz",
        sccigarsidx="call_mutations/{sample}/cigars.tab.gz.tbi",
        bulkcigars="call_mutations/%s/cigars.tab.gz" % config['bulk_sample'],
        bulkcigarsidx="call_mutations/%s/cigars.tab.gz.tbi" % config['bulk_sample'],
        cigardata="call_mutations/{sample}/cigardata_update.tab.gz",
        cigardataidx="call_mutations/{sample}/cigardata_update.tab.gz.tbi",
        scbinnedcounts="depth_profile/binned_counts/{sample}.tab.gz",
        bulkbinnedcounts="depth_profile/binned_counts/%s.tab.gz" % config['bulk_sample'],
        gcbins=config['resources'] + "/binned_counts/" + config['genome'] + "/gc_content.tab.gz",
        #gcbins="/n/data1/hms/dbmi/park/jluquette/scan2-test/ginkgo_variable_bins/scan2_bins_human_g1k_v37_decoy/nuc_content/bins_mapq60_width1000/gc_content.tab.gz",
        dptab="depth_profile/{sample}_depth_table.rda",
        # If these two files are supplied, it will trigger a scatter/gather
        # process to precompute them. To not use precomputed files, comment
        # out these two paths and replace them in the shell command below with
        # the string "NULL"
        precomputed_ab_and_models='call_mutations/{sample}/ab_ests_and_models.tab.gz',
        precomputed_excess_cigar_scores='call_mutations/{sample}/excess_cigar_scores.tab.gz',
        depth_covs="call_mutations/{sample}/depth_covariates.tab.gz",
        abmodel_covs="call_mutations/{sample}/abmodel_covariates.tab.gz"
    output:
        "call_mutations/{sample}/scan2_object_update.rda"
    log:
        "call_mutations/{sample}/call_mutations_update.log"
    benchmark:
        "call_mutations/{sample}/benchmark_call_mutations_update.txt"
    params:
        sc_sample="{sample}",
    # If the precomputed AB ests and excess cigar files are not available,
    # then 10+ threads should be used.
    threads: 1
    resources:
        # The final sensitivity model calcs use quite a lot of memory
        mem_mb=lambda wildcards, input, threads: 2000*threads + 14000
    shell:
        """
        {config[scripts]}/call_mutations.R \
           {params.sc_sample} {input.config_yaml} \
           {input.inttab} {input.fits} \
           {input.sccigars} {input.bulkcigars} \
           {input.cigardata} {input.dptab} \
           {input.scbinnedcounts} \
           {input.bulkbinnedcounts} \
           {input.gcbins} \
           {input.precomputed_ab_and_models} \
           {input.precomputed_excess_cigar_scores} \
           {input.abmodel_covs} \
           {input.depth_covs} \
           {output} {threads} >& {log}
        """


